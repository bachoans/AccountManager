using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AccountManager.Data.Entities
{
    public class Account
    {
        [Key]
        public int AccountId { get; set; }

        /// <summary>Unique token for identifying the account (generated by default).</summary>
        [MaxLength(128)]
        public string Token { get; set; } = Guid.NewGuid().ToString();

        /// <summary>Indicates whether the account is currently active.</summary>
        public bool IsActive { get; set; } = false;

        /// <summary>Name of the company owning this account.</summary>
        [MaxLength(100)]
        public string CompanyName { get; set; }

        /// <summary>Country of the company (optional).</summary>
        [MaxLength(50)]
        public string? Country { get; set; } = string.Empty;

        /// <summary>Timestamp when the account was created (UTC).</summary>
        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>Whether 2FA is enabled for this account.</summary>
        public bool Is2FAEnabled { get; set; }

        /// <summary>Whether IP filtering is enabled.</summary>
        public bool IsIPFilterEnabled { get; set; }

        /// <summary>Whether session timeout is enforced.</summary>
        public bool IsSessionTimeoutEnabled { get; set; }

        /// <summary>Timeout duration in minutes for inactive sessions.</summary>
        public int SessionTimeOut { get; set; }

        /// <summary>The local timezone configured for the account (optional).</summary>
        [MaxLength(100)]
        public string? LocalTimeZone { get; set; }

        /// <summary>Navigation property for related AccountSubscription (1:1).</summary>
        public virtual AccountSubscription? AccountSubscriptions { get; set; }
    }
}
